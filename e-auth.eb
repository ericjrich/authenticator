#!/usr/bin/env bash
#20240207_0921_est_EJR
# 2 factors auth

### Do First ###
  shopt -s dotglob
  if ! command -v zenity &> /dev/null; then clear; echo -e "zenity is not installed. Please run the following command to install it:\n sudo apt-get install -y zenity"; exit 1; fi
  if ! command -v xclip &> /dev/null; then echo "xclip is not installed. Please run the following command to install it:"; echo "sudo apt-get install -y xclip"; exit 1; fi
  if ! command -v oathtool &> /dev/null; then echo "oathtool is not installed. Please run the following command to install it:"; echo "sudo apt-get install -y oathtool"; exit 1; fi

#..csv files...................................................................................
  tmpcsv="/tmp/tmp.csv"

  csv="$HOME/a-me/z-personal/web-browsers/auth/auth.csv"
  if [ ! -f "$csv" ]; then
    csv=$(zenity --file-selection --title="Select your csv file")
    if [ $? -eq 1 ]; then echo "User canceled the selection. Exiting."; exit 1; fi
  fi

#..fix trailing line...........................................................................
  awk 'NR>1 { printf "\n" } { printf "%s", $0 } END { printf "\n" }' "$csv" > "$tmpcsv" && mv "$tmpcsv" "$csv"

#..funcs.......................................................................................
control_loop() { while true; do read -n 1 input < /dev/tty; if [[ "${input,,}" == 'q' ]]; then clear; kill $(jobs -p); break; fi; done; }
background_loop() { while true; do clear; zotp=$(oathtool --base32 --totp "$zseed"); current_time=$(date +%s); next_interval=$((current_time + 30 - (current_time % 30))); remaining=$((next_interval - current_time)); echo -e "\e[32m\e[2m$zinfo\e[0m\n\nOTP FOR \e[36m\e[1m$zname\e[0m (Copied To Clipboard):\n\e[33m$(figlet $zotp)\e[0m\n\n**Press \e[5m( Q )\e[0m To Leave**"; printf "\nTime until next code: %02d:%02d\n" $((remaining / 60)) $((remaining % 60)); if [ "$zotp" != "$last_otp" ]; then echo -n "$zotp" | xclip -selection clipboard; last_otp="$zotp"; fi; sleep 1; done; }

#..vars........................................................................................
  keys="1234567890qwertyuiopasdfghjklzxcvbnm"; IFS=','; line_num=0; declare -A menu_options
  declare -a menu_names; declare -a menu_seeds; declare -a menu_users; declare -a menu_passes; declare -a menu_urls

#..menu........................................................................................
  clear
#----
  while read -r line; do
    if [ $line_num -gt 0 ]; then
      IFS=';' read -r -a fields <<< "$line"
      name="${fields[0]}"
      seed="${fields[1]}"
      user="${fields[2]}"
      pass="${fields[3]}"
      url="${fields[4]}"
      key="${keys:0:1}"
      keys="${keys:1}"
      menu_options["$key"]="$name"
      menu_names["$key"]="$name"
      menu_seeds["$key"]="$seed"
      menu_users["$key"]="$user"
      menu_passes["$key"]="$pass"
      menu_urls["$key"]="$url"
      echo "$key - $name"
    fi
    ((line_num++))
  done < "$csv"
#----
  echo 'Esc - Exit'; echo "Hit Key For Option:"; read -rsn1 press; press=${press,,}

#..cases.......................................................................................
  case "$press" in
    $'\e')  clear; exit 0;;
        *)  if [ -n "${menu_options[$press]}" ]; then zinfo="USER: ${menu_users[$press]}\nPASS: ${menu_passes[$press]}\nURL: ${menu_urls[$press]}"; zname="${menu_names[$press]}"; zseed="${menu_seeds[$press]}"; last_otp=""; background_loop & control_loop
            clear; else clear; exit 0; fi;;
  esac
#..............................................................................................